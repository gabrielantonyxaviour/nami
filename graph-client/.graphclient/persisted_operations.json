{
  "749505184cd001918180d0783d0b92f8346db57e620524d6e91982753c3d90a0": "query GetBalances($address: String!) {\n  kintoBalances(where: {account_contains: $address}) {\n    amount\n    token {\n      id\n      symbol\n    }\n  }\n  polBalances(where: {account_contains: $address}) {\n    amount\n    token {\n      id\n      symbol\n    }\n  }\n  ethBalances(where: {account_contains: $address}) {\n    amount\n    token {\n      id\n      symbol\n    }\n  }\n  scrollBalances(where: {account_contains: $address}) {\n    amount\n    token {\n      id\n      symbol\n    }\n  }\n  baseBalances(where: {account_contains: $address}) {\n    amount\n    token {\n      id\n      symbol\n    }\n  }\n}",
  "68f94a7f16be2d33bbdd4f1634e93ada47916ed05b70a903b7b4411b95838bf5": "query GetDisasterByAddress($vault: Bytes!, $to: String!, $tokenSymbol: String, $chain: String, $baseOrderBy: baseTransfer_orderBy, $polygonOrderBy: polTransfer_orderBy, $ethereumOrderBy: ethTransfer_orderBy, $kintoOrderBy: kintoTransfer_orderBy, $scrollOrderBy: scrollTransfer_orderBy, $orderDirection: OrderDirection) {\n  disasterDescriptives(where: {vaultAddress: $vault}) {\n    id\n    name\n    description\n    disasterType\n    location\n    createdAt\n    fundsNeeded\n    ensName\n    baseName\n    vaultAddress\n    attestationId\n    transactionHash\n    hyperlaneMessageId\n    totalFundsReleased\n    totalBeneficiaries\n    fundReleases {\n      id\n      beneficiary {\n        id\n        name\n        totalAmountReceived\n      }\n      attestationId\n      comments\n      amountInUSD\n      hyperlaneMessageId\n      transactionHash\n      claims {\n        chainId\n        tokens\n        amounts\n      }\n    }\n  }\n  baseTransfers(\n    where: {to: $to}\n    orderBy: $baseOrderBy\n    orderDirection: $orderDirection\n  ) {\n    id\n    token {\n      id\n      name\n      symbol\n    }\n    from {\n      id\n    }\n    to {\n      id\n    }\n    amount\n    blockNumber\n    timestamp\n    transactionHash\n  }\n  ethTransfers(\n    where: {to: $to}\n    orderBy: $ethereumOrderBy\n    orderDirection: $orderDirection\n  ) {\n    id\n    token {\n      id\n      name\n      symbol\n    }\n    from {\n      id\n    }\n    to {\n      id\n    }\n    amount\n    blockNumber\n    timestamp\n    transactionHash\n  }\n  polTransfers(\n    where: {to: $to}\n    orderBy: $polygonOrderBy\n    orderDirection: $orderDirection\n  ) {\n    id\n    token {\n      id\n      name\n      symbol\n    }\n    from {\n      id\n    }\n    to {\n      id\n    }\n    amount\n    blockNumber\n    timestamp\n    transactionHash\n  }\n  kintoTransfers(\n    where: {to: $to}\n    orderBy: $kintoOrderBy\n    orderDirection: $orderDirection\n  ) {\n    id\n    token {\n      id\n      name\n      symbol\n    }\n    from {\n      id\n    }\n    to {\n      id\n    }\n    amount\n    blockNumber\n    timestamp\n    transactionHash\n  }\n  scrollTransfers(\n    where: {to: $to}\n    orderBy: $scrollOrderBy\n    orderDirection: $orderDirection\n  ) {\n    id\n    token {\n      id\n      name\n      symbol\n    }\n    from {\n      id\n    }\n    to {\n      id\n    }\n    amount\n    blockNumber\n    timestamp\n    transactionHash\n  }\n}",
  "87eddab482c0cc525befa2bd73a8c67c6c8ed11e25f23e09c34a5d5c8a090da6": "query GetDisasters($orderBy: disasterDescriptive_orderBy!, $orderDirection: OrderDirection!) {\n  disasters {\n    id\n    transactionHash\n    totalFundingAmount\n  }\n  disasterDescriptives(orderBy: $orderBy, orderDirection: $orderDirection) {\n    id\n    name\n    description\n    disasterType\n    location\n    createdAt\n    fundsNeeded\n    attestationId\n    hyperlaneMessageId\n    transactionHash\n  }\n}"
}